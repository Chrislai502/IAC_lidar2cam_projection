# Running the Lidar_camera stack
1) rviz2
2) Yolo node:
    ros2 run tensorrt_yolov7 tensorrt_yolov7_node_exe --ros-args -p engine_path:="/home/roar/ART/perception/model_trials/NVIDIA_AI_IOT_tensorrt_yolov7/yolo_deepstream/tensorrt_yolov7/build/yolov7PTQ.engine" -p debug:=0 -p frame_id:="a"
3) rosbag:
    cd ~
    cd Chris
    ros2 bag play cars_only -l
4) lidar cam projection node
    ros2 run lidar_camera_projection lidarchris_node
# In any case if the lidar node does not run, source with command "a"

# Pip install python package from github
pip install "git+https://github.com/myuser/mypackage.git@<branch or tag>"
pip install --force-reinstall 

    # Requirements.txt useful stuff: https://pip.pypa.io/en/stable/reference/requirements-file-format/
    --pre: Include pre-release and development versions. By default, pip only finds stable versions.
    SomeProject
    SomeProject == 1.3
    SomeProject >=1.2,<2.0
    SomeProject[foo, bar]
    SomeProject~=1.4.2

# VSCode Shortcuts
    Aman's comment method
    Alt + x
    Alt + y
    Alt + Shift + x

    Search For Function       : Ctrl + Alt + P
    Expand Select             : Alt + Shift + <arrow L/R> : 
    Move line of code Up/Down : Alt           <arrow U/D> :
    Copy line of code Up/Down : Ctrl + Shift + Alt + <arrow U/D>
    Limit Line Length to View : Alt + Z
    Multiple Cursors          : Alt + LeftClick
    Multiple Cursors Up/Down  : Alt + Shift + <arrow U/D> : 
    Replace with Cursors 
    (Select text you want 
    to replace)               : Ctrl + Shift L

# Open AI chatGPD
The bag to play in /media/Public/ROSBAG_BACKUPS
source ~/ART/iac_launch/install/setup.bash
ros2 bag play rosbag2_2022_11_09-16_27_25
ros2 bag play rosbag2_2022_09_21-12_58_49 -l # cars at the very start
ros2 bag record -a -o my_bag.bag /chatter  (-a will listen to all topics, -o indicate bag name )

# Running the Yolo node
~/ROAR_ROS/iac_dev_ws$ source install/setup.bash 
ros2 run tensorrt_yolov7 tensorrt_yolov7_node_exe --ros-args -p engine_path:="/home/roar/ART/perception/model_trials/NVIDIA_AI_IOT_tensorrt_yolov7/yolo_deepstream/tensorrt_yolov7/build/yolov7PTQ.engine" -p debug:=0 -p frame_id:="a"
ros2 bag play rosbag2_2022_09_21-12_58_49 -l # cars at the very start

ros2 run lidar_camera_projection 

DetectedObjectsWithFeature.msg
    std_msgs/Header header
    DetectedObjectWithFeature[] feature_objects 

    DetectedObjectWithFeature.msg
        autoware_auto_perception_msgs/DetectedObject object
        Feature feature

        Feature.msg
            sensor_msgs/PointCloud2 cluster
            sensor_msgs/RegionOfInterest roi


# LIDAR documentation is at 
/ART/perception/Documentation/LiDAR

# rosrun
ros2 run <package_name> <executable_name>
ros2 run <package_name> <executable_name> --ros-args --params-file <file_name>
ros2 launch turtlesim multisim.launch.py

# Source 
source ~/ROAR_ROS/iac_dev_ws/install/setup.bash

# Create a package
ros2 pkg create --build-type ament_cmake <pkg_name> --dependencies [deps]
ros2 pkg create --build-type ament_python <pkg_name> --dependencies [deps]

# colcon build
colcon build --symlink-install
colcon build --packages-skip
After the build is finished, we should see the build, install, and log directories:
colcon test
source install/setup.bash
colcon build --packages-select my_package
colcon build --continue-on-error

# Utility
    ros2 node list
    ros2 topic list
    ros2 service list
    ros2 action list
    ros2 param list
    ros2 param get <node_name> <parameter_name>
    ros2 param set <node_name> <parameter_name> <value>
    ros2 param dump <node_name>
        - will return mssg
            Saving to:  ./<node_name>.yaml
    ros2 param load <node_name> <parameter_file>
    ros2 topic echo <topic_name>
    rqt

# Creating a bag
    ros2 bag record <topic_name> # records all the topics
    ros2 bag record -o <bagfile_name> <topic_name1> <topic_name2>
    ros2 bag info <bag_file_name>
    ros2 bag play

# tf2 Analyze Tools
    ros2 run tf2_tools view_frames
    ros2 run tf2_echo <Target Frame> <Source Frame>

# Copy files around
scp -r ./rtl88x2bu/ roar@192.168.1.69:~/Downloads

sudo nvidia-smi -p -d POWER
conda activate yolov7
perception/yolov7
python train.py --workers 8 --device 0 --batch-size 8 --data data/custom_dataset.yaml --img 1056 1056 --cfg cfg/training/yolov7.yaml --weights yolov7_training.pt --name yolov7_p5_transfer_fc --hyp data/hyp.scratch.custom.yaml --epochs 10 --rect --image-weights --single-cls --bbox_interval 1 --save_period 1 --v5-metric --resume

All vision_msgs imports (for C++)
bounding_box2_d.h
bounding_box2_d.hpp
bounding_box3_d_array.h
bounding_box3_d_array.hpp
bounding_box3_d.h
bounding_box3_d.hpp
classification.h
classification.hpp
detail
detection2_d_array.h
detection2_d_array.hpp
detection2_d.h
detection2_d.hpp
detection3_d_array.h
detection3_d_array.hpp
detection3_d.h
detection3_d.hpp
object_hypothesis.h
object_hypothesis.hpp
object_hypothesis_with_pose.h
object_hypothesis_with_pose.hpp
rosidl_generator_c__visibility_control.h
rosidl_typesupport_fastrtps_cpp__visibility_control.h
rosidl_typesupport_fastrtps_c__visibility_control.h
rosidl_typesupport_introspection_c__visibility_control.h
vision_info.h
vision_info.hpp


PointCloud Topic:

    header:
    stamp:
        sec: 1668032877
        nanosec: 317955328
    frame_id: luminar_front
    height: 1
    width: 42024
    fields:
    - name: x
    offset: 0
    datatype: 7
    count: 1
    - name: y
    offset: 4
    datatype: 7
    count: 1
    - name: z
    offset: 8
    datatype: 7
    count: 1
    - name: intensity
    offset: 12
    datatype: 7
    count: 1
    - name: ring
    offset: 16
    datatype: 7
    count: 1
    - name: time
    offset: 20
    datatype: 7
    count: 1
    is_bigendian: false
    point_step: 24
    row_step: 1008576
    data:
    - 90
    - 154
    - 17
    - 67
    - 154
    - 156
    - 183
    - 192
    - 91
    - 30
    - 33
    - 66
    - 0
    - 0
    - 62
    - 61
    - 0
    - 0
    - 84
    - 66
    - 0
    - 0
    - 0
    - 0
    - 145
    - 237
    - 16
    - 67
    - 90
    - 200
    - 59
    - 193
    - 13
    - 59
    - 32
    - 66
    - 0
    - 0
    - 188
    - 60
    - 0
    - 0
    - 84
    - 66
    - 255
    - 5
    - 2
    - 56
    - 67
    - 198
    - 0
    - 65
    - 113
    - 44
    - 50
    - 65
    - 70
    - 23
    - 111
    - 64
    - 0
    - 0
    - 64
    - 59
    - 0
    - 0
    - 80
    - 66
    - 172
    - 197
    - 39
    - 56
    - 36
    - 53
    - 1
    - 65
    - 153
    - 205
    - 49
    - 65
    - 170
    - 10
    - 111
    - 64
    - 0
    - 0
    - 240
    - 59
    - 0
    - 0
    - 80
    - 66
    - 40
    - 41
    - 48
    - 56
    - 4
    - 114
    - 1
    - 65
    - 200
    - 60
    - 49
    - 65
    - 98
    - 178
    - 110
    - 64
    - 0
    - 0
    - 0
    - 60
    - 0
    - 0
    - 80
    - 66
    - 230
    - 90
    - 52
    - 56
    - 204
    - 199
    - 1
    - 65
    - 138
    - 215
    - 48
    - 65
    - '...'
    is_dense: true
